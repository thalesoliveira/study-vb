'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Estoque")>
Partial Public Class EstoqueDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertProduto(instance As Produto)
    End Sub
    Partial Private Sub UpdateProduto(instance As Produto)
    End Sub
    Partial Private Sub DeleteProduto(instance As Produto)
    End Sub
#End Region

    Public Sub New()
        MyBase.New(Global.Linq_ToSQL.My.MySettings.Default.EstoqueConnectionString, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property Produtos() As System.Data.Linq.Table(Of Produto)
        Get
            Return Me.GetTable(Of Produto)
        End Get
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Produtos")>
Partial Public Class Produto
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Integer

    Private _nome As String

    Private _preco As System.Nullable(Of Decimal)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnnomeChanging(value As String)
    End Sub
    Partial Private Sub OnnomeChanged()
    End Sub
    Partial Private Sub OnprecoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnprecoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Integer
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = Value) _
                        = False) Then
                Me.OnIdChanging(Value)
                Me.SendPropertyChanging()
                Me._Id = Value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nome", DbType:="NVarChar(50)")>
    Public Property nome() As String
        Get
            Return Me._nome
        End Get
        Set
            If (String.Equals(Me._nome, Value) = False) Then
                Me.OnnomeChanging(Value)
                Me.SendPropertyChanging()
                Me._nome = Value
                Me.SendPropertyChanged("nome")
                Me.OnnomeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_preco", DbType:="Money")>
    Public Property preco() As System.Nullable(Of Decimal)
        Get
            Return Me._preco
        End Get
        Set
            If (Me._preco.Equals(Value) = False) Then
                Me.OnprecoChanging(Value)
                Me.SendPropertyChanging()
                Me._preco = Value
                Me.SendPropertyChanged("preco")
                Me.OnprecoChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class
